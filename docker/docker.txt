# 2019-9-3 15:01:55
1. docker images
2. docker start id
2. sudo docker attach 容器ID  
3. env



# 进入容器
$ sudo docker ps  
$ sudo docker exec -it 775c7c9ee1e1 /bin/bash  


# 查看日志
 docker logs -f 6c20f822c0a9

# 容器日志
kubectl get pod -n c7n-system | grep ui
kubectl log -f ui-automate-websocket-77844686f6-6r7r9   -n c7n-system
kubectl log -f ui-automate-websocket-6d6466c4-9sf44   -n c7n-system

# 进入指定容器
kubectl exec -it ui-automate-websocket-775d66dcf4-58jxf  -n c7n-system -- /bin/bash

# 查看文件映射是否成功
kubectl exec -it ui-automate-websocket-775d66dcf4-58jxf  -c etc sh




docker login -u appuser -p Sys@2020#c registry.steam.crcloud.com/docker/library/python:3.5.6
docker build -t registry.steam.crcloud.com/docker/library/python/nodejs:1.0.0 .
docker push registry.steam.crcloud.com/docker/library/python/nodejs:1.0.0


operation-devops/APg4R4qpQEXk1SQCdBPYqCzCU97YkUE8W3iMf



# 进入正在运行的容器
kubectl get pods   #查看所有正在运行的pod
NAME                            READY     STATUS    RESTARTS   AGE
nginx-56b8c64cb4-t97vb          1/1       Running   3          1d
<2>
➜  ~ kubectl exec -it nginx-56b8c64cb4-t97vb -- /bin/bash      #假如当前pod只有一个容器,运行以下命令即可
root@nginx-56b8c64cb4-t97vb:/# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  0 14:45 ?        00:00:00 nginx: master process nginx -g daemon off;
<3>假如一个pod里有多个容器,用--container or -c 参数。例如:假如这里有个Pod名为my-pod,这个Pod有两个容器,分别名为main-app 和 helper-app,下面的命令将打开到main-app的shell的容器里。
kubectl exec -it my-pod --container main-app -- /bin/bash
