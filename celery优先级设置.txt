# 2019-1-3 11:22:45
1.实用rebitmq：
Celery 是一个简单、灵活且可靠的,处理大量消息的分布式系统,并且提供维护这样一个系统的必需工具。
它是一个专注于实时处理的任务队列，同时也支持任务调度。
优先级队列问题：
Celery 官方给出的是不支持优先级队列：
http://docs.celeryproject.org/en/master/faq.html#does-celery-support-task-priorities
https://www.rabbitmq.com/priority.html
https://github.com/celery/celery/issues/2635

celery中broker 常用的是rabbitmq，rabbitmq 3.5版本之后支持优先级队列，消息具有不同的优先级，
同一个队列中优先级高的先得到处理。rabbitmq 支持这种特性的话，celery就可以实现优先级队列，
毕竟celery是从broker中获取msg的。
celery还可以通过rabbitmq中的Consumer Priorities 的特性支持队列之间的优先级。
A和B两个队列，A队列的consumer优先级位10，B队列的consumer优先级位1.
那么之后当A队列的consumer都处于阻塞状态的时候，B队列的consumer才能从rabbitmq中获取消费信息。


from kombu import Exchange, Queue

CELERY_ACKS_LATE = True
CELERY_IGNORE_RESULT = True
CELERY_DISABLE_RATE_LIMITS = True
BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 86400}
WORKER_MAX_MEMORY_PER_CHILD = 300
CELERY_QUEUES = (
    Queue('analyse', routing_key='analyse',consumer_arguments={'x-priority': 10}),
    Queue('transcode', routing_key='transcode',consumer_arguments={'x-priority': 5}),
    Queue('download', routing_key='download',consumer_arguments={'x-priority': 1}),
)
